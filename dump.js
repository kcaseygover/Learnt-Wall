DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS resources CASCADE;
DROP TABLE IF EXISTS likes CASCADE;
DROP TABLE IF EXISTS ratings CASCADE;
DROP TABLE IF EXISTS comments CASCADE;
DROP TABLE IF EXISTS categories CASCADE;

CREATE TABLE users (
  id SERIAL PRIMARY KEY NOT NULL,
  email VARCHAR(50) NOT NULL,
  password VARCHAR(50) NOT NULL
);
CREATE TABLE resources (
  id SERIAL PRIMARY KEY,
  users_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  url VARCHAR(50) NOT NULL,
  title VARCHAR(50) NOT NULL
  description TEXT NOT NULL
  category_id VARCHAR(50) NOT NULL REFERENCES categories(id) ON DELETE CASCADE
);
CREATE TABLE likes (
  id SERIAL PRIMARY KEY NOT NULL,
  users_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  resources_id INTEGER NOT NULL REFERENCES resources(id) ON DELETE CASCADE,
  like BOOLEAN NOT NULL
);
CREATE TABLE ratings (
  id SERIAL PRIMARY KEY NOT NULL,
  users_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  resources_id INTEGER NOT NULL REFERENCES resources(id) ON DELETE CASCADE,
  rating INTEGER NOT NULL
);
CREATE TABLE comments (
  id SERIAL PRIMARY KEY NOT NULL,
  users_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  resources_id INTEGER NOT NULL REFERENCES resources(id) ON DELETE CASCADE,
  comments TEXT NOT NULL
);
CREATE TABLE categories (
  id SERIAL PRIMARY KEY NOT NULL,
  name VARCHAR(50) NOT NULL
);
